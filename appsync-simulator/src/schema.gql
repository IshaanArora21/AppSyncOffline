# type Job {
#   position: String
#   location: String
# }

# type User {
#   id: String
#   name: String
#   friends: [User]
#   # job: Job
# }

# input UserInput {
#   id: String!
#   name: String!
# }

# type Mutation {
#   createUser(input: UserInput!): User
# }

# type Query {
#   users: [User]
#   user: User
#   getUserById(id: String): User
# }

type User {
  id: Int!
  guid: String!
  first_name: String!
  last_name: String!
  email: String!
  password: String!
  phone_no: String!
  resume: String!
  portfolio_url: String
  profile_pic: String
  dt_created: String!
  dt_modified: String!
}

type EducationalQualification {
  id: Int!
  guid: String!
  aggregate_percentage: Float!
  passing_year: Int!
  degree: String!
  stream: String!
  college: String!
  college_city: String!
  dt_created: String!
  dt_modified: String!
}

type ProfessionalQualification {
  id: Int!
  guid: String
  applicant_type: String!
  applied_test: Boolean!
  applied_test_role: String
  familiarTechnologies: [Technology!]!
  experienced_qualification: ExperiencedQualification
  dt_created: String!
  dt_modified: String!
}

type ExperiencedQualification {
  id: Int!
  guid: String!
  experience_year: Int!
  current_ctc: String!
  expected_ctc: String!
  notice_period: Boolean!
  notice_period_end: String
  notice_period_duration: Int
  dt_created: String!
  dt_modified: String!
  expertiseTechnologies: [Technology!]!
}

type Technology {
  id: Int!
  technology_name: String!
  dt_created: String!
  dt_modified: String!
}

# type AppliedDrive {
#   id: Int!
#   guid: String!
#   updated_resume: String
#   timeSlot: TimeSlot!
#   walkInDrive: WalkInDrive!
#   preferredJobroles: [jobRoles!]
#   dt_created: String!
#   dt_modified: String!
# }
type TimeSlot {
  id: Int!
  slot_timings: String!
}

type JobRole {
  id:Int!
  job_title: String!
  package: String!
  job_description: String!
  job_requirements: String!
}

type WalkInDrive {
  id: Int!
  guid: String!
  drive_title: String!
  start_date: String!
  end_date: String!
  location: String!
  job_Roles: [JobRole]
  time_Slots: [TimeSlot]
  dt_created: String!
  dt_modified: String!
  expiry:Int
  general_instructions:String
  instructions_for_exam:String
  minimum_system_requirements:String
  process:String
}
type WalkInDriveByGUID{
  id: Int!
  guid: String!
  drive_title: String!
  start_date: String!
  end_date: String!
  location: String!
  job_Roles: [JobRole]
  time_Slots: [TimeSlot]
  dt_created: String!
  dt_modified: String!
  expiry:Int
  general_instructions:String
  instructions_for_exam:String
  minimum_system_requirements:String
  process:String
}

input personalInfo {
  first_name: String!
  last_name: String!
  email: String!
  password: String!
  phone_no: String!
  resume: String!
  portfolio_url: String
  profile_pic: String
  preferred_Job_roles_id:[Int!]!
}
input HallTicketInput{
  user_id:Int!
  job_role_id:Int!
  walk_in_drive_id:Int!
  timeslot_id:Int!
}

type HallTicketOutput{
  user_id:Int!
  slot_timings:String!
  job_title:String!
  walk_in_drive_id:Int!
  company_name:String!
  address_line_1:String!
  area:String!
  pincode:String!
  things_to_remember:String!
  phone:String!
  city:String!
  start_date:String!
}
input EducationalQualificationInput {
  aggregate_percentage: Float!
  passing_year: Int!
  degree: String!
  stream: String!
  college: String!
  college_city: String!

}

input ProfessionalQualificationInput {
  applicant_type: String!
  applied_test: Boolean!
  applied_test_role: String
  familiarTechnologies: [Int!]!
  experienced_qualification: ExperiencedQualificationInput

}

input TechnologyInput {
  id: Int!
  technology_name: String!
}

input ExperiencedQualificationInput {
  experience_year: Int!
  current_ctc: String!
  expected_ctc: String!
  notice_period: Boolean!
  notice_period_end: String
  notice_period_duration: Int
  expertiseTechnologies: [Int!]!

}
input userInput{
  personalInfo:personalInfo!
  educationalQualification:EducationalQualificationInput!
  professionalQualification:ProfessionalQualificationInput!
  
}


input JobRoleInput {
  id: Int!
  guid: String!
  job_title: String!
}

input applicationInput {
  user_id: Int!
  walk_in_drive_id: Int!
  timeslot_id: Int!
  updated_resume: String!
  job_role_id: [Int!]!
}
type driveSuccess{
  date:String!
  timings:String!
  location:String!
}

type UserCredentials{
  id:Int!
  guid:String!
  first_name:String!
  last_name:String!
  email:String!
  jwt_token:String!
}
input LoginInput{
  email:String!
  password:String!
}

type Mutation {

  applyDrive(applicantInput:applicationInput):String
  createUser(newUser:userInput):String
}

type Query {
  login(user:LoginInput!):UserCredentials!
  getAllWalkInDrives: [WalkInDrive]
  getWalkInDriveByGUID(guid:String!):WalkInDriveByGUID
  getHallTicket(hallticket:HallTicketInput!):HallTicketOutput
  authenticateUser(jwt_token:String!):UserCredentials!
}